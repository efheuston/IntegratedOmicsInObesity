---
title: "ArchR-DataViz"
author: "Elisabeth F. Heuston"
html:
 embed-resources: true
 self-contained-math: true
execute:
 cache: true
editor: visual
---

# Background

Ran `ArchR.R` on lean, overweight, and obese HPAP scATAC data.\
lean (NW)\
overweight (OW)\
obese (OB)\
This document is primarily for data visualization. Additional analyses should be run in `ArchR.R`\
\# Setup

```{r, setup, include=FALSE}
knitr::opts_knit$set(root.dir = "/Users/heustonef/Desktop/Obesity/snATAC/")
```

## Load libraries and local functions

```{r}
library(ArchR) 
addArchRGenome("hg38")
invisible(sapply(list.files(path = "/Users/heustonef/OneDrive-NIH/SingleCellMetaAnalysis/GitRepository/scMultiomics_MetaAnalysis/RFunctions", pattern = "*.R$", full.names = TRUE),
								 source))
projectName <- "Obesity_scHPAP"
writeLines(capture.output(sessionInfo()), paste0(projectName, "_sessionInfo.txt"))
```

## Load metadata

```{r}
metadata <- read.table(file = "/Users/heustonef/OneDrive-NIH/SingleCellMetaAnalysis/GitRepository/scMultiomics_MetaAnalysis/HPAPMetaData.txt", header = TRUE, sep = "\t")
rownames(metadata) <- metadata$DonorID
```

## Load data

```{r}
arch.proj <- loadArchRProject(showLogo = FALSE)
```

```{r}
cellcoldata <- getCellColData(arch.proj, select = c("log10(nFrags)", "TSSEnrichment"))

# plot unique nuclear fragments vs TSS enrichment score
ggPoint(
	x = cellcoldata[,1],
	y = cellcoldata[,2],
	colorDensity = TRUE,
	continuousSet = "sambaNight", 
	xlabel = "Log10 Unique Fragments",
	ylabel = "TSS Enrichment",
	xlim = c(log10(500), quantile(cellcoldata[,1], probs = 0.99)),
	ylim = c(0, quantile(cellcoldata[,2], probs = 0.99))) +
	geom_hline(yintercept = 4, lty = "dashed") +
	geom_vline(xintercept = 3, lty = "dashed")


# plot TSSEnrichment ridge plot per sample
plotGroups(
	ArchRProj = arch.proj,
	groupBy = "Sample", 
	colorBy = "cellColData",
	name = "TSSEnrichment", 
	plotAs = "ridges"
) +
	geom_vline(xintercept = 8, lty = "dashed") 

# -- TSS plots show some samples have 2 TSS enrichment at 2 different scores. Will set cutoff @ 8 to maintain a single enriched peak.

# plot nFrags ridge plot per sample
plotGroups(
	ArchRProj = arch.proj,
	groupBy = "Sample", 
	colorBy = "cellColData",
	name = "log10(nFrags)", 
	plotAs = "ridges") +
	geom_vline(xintercept = log10(1000), lty = "dashed") +
	geom_vline(xintercept = log10(30000), lty = "dashed")

```

## Cluster info

### cells per harmony cluster

```{r}
t(t(table(arch.proj$Harmony_res0.5)))
```

```{r}
cM <- confusionMatrix(paste0(arch.proj$Harmony_res0.5), paste0(arch.proj$Obesity))
cM <- cM / Matrix::rowSums(cM)
pheatmap::pheatmap(
	mat = as.matrix(cM),
	color = paletteContinuous("whiteBlue"),
	border_color = "black", 
	display_numbers = TRUE, 
	number_color = "firebrick"
)
```
## Motif images
```{r}
markerPeaks <- readRDS("Obesity_scHPAP-MarkerPeaks.RDS")
enrichEncode <- peakAnnoEnrichment(seMarker = markerPeaks, ArchRProj = arch.proj, peakAnnotation = "EncodeTFBS", cutOff = "FDR <= 0.1 & Log2FC >= 0.5")
heatmapEncode <- plotEnrichHeatmap(enrichEncode, n = 7, transpose = TRUE)
ComplexHeatmap::draw(heatmapEncode, heatmap_legend_side = "bot", annotation_legend_side = "bot")
```
```{r}
# plotVar
```



```{r}
arch.markers <- readRDS("Obesity_scHPAP-markergenes.RDS")
panc.markers <- readRDS("/Users/heustonef/OneDrive-NIH/SingleCellMetaAnalysis/GitRepository/scMultiomics_MetaAnalysis/RFunctions/panc.markers.RDS")
heatmap.islets <- plotMarkerHeatmap(seMarker = arch.markers, 
																		cutOff = "FDR <= 0.01 & Log2FC >=1.25",
																		labelMarkers = unlist(panc.markers),
																		transpose = TRUE)
heatmap.plot <- ComplexHeatmap::draw(heatmap.islets, heatmap_legend_side = "bot", annotation_legend_side = "bot")
```

```{r}
for(i in 1:length(panc.markers)){
	chart.name <- names(panc.markers[i])
	gene.set <- panc.markers[i]
	
	heatmap.islets <- plotMarkerHeatmap(seMarker = arch.markers, 
																			cutOff = "FDR <= 0.01 & Log2FC >=1.25",
																			labelMarkers = unlist(gene.set),
																			transpose = TRUE, )
	heatmap.plot <- ComplexHeatmap::draw(heatmap.islets, heatmap_legend_side = "bot", annotation_legend_side = "bot")
}
```



